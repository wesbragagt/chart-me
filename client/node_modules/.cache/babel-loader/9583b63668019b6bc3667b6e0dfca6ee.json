{"ast":null,"code":"var _jsxFileName = \"/Users/weslleybraga/Documents/GitHub/chart-me/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Divider, Typography, Button } from '@material-ui/core';\nimport React from 'react';\nimport { SPaper, STextField, SLayout, SBox, SignOut, SignIn } from './components';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useAppDispatch, useAppSelector } from './redux/hooks';\nimport { createSection, editSectionValue, deleteSection, editTitle, editKey, editBpm, loadSavedChart, fetchChartsAsync, saveChartAsync } from './redux/slices/chart.slice';\nimport { FaMinusSquare, FaPlus } from 'react-icons/fa';\nimport JsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport keys from './keys';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { setProfile } from './redux/slices/user.slice';\nimport SDrawer from './components/SDrawer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    sections,\n    title,\n    key,\n    bpm,\n    entities,\n    isLoading\n  } = useAppSelector(state => state.chart);\n  const dispatch = useAppDispatch();\n  console.log(entities);\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  React.useEffect(() => {\n    if (isAuthenticated && user) {\n      var _user$sub;\n\n      const id = ((_user$sub = user.sub) === null || _user$sub === void 0 ? void 0 : _user$sub.split('|')[1]) || '';\n      dispatch(setProfile({\n        id,\n        email: user.email || ''\n      }));\n      dispatch(fetchChartsAsync());\n    }\n  }, [isAuthenticated]);\n  const [inputSection, setInputSection] = React.useState('');\n\n  const handleChange = e => {\n    const newValue = e.target.value.toUpperCase();\n    setInputSection(newValue);\n  };\n\n  const handleNewSection = e => {\n    if (e.key === 'Enter') {\n      dispatch(createSection(inputSection.trim()));\n      setInputSection('');\n    }\n  };\n\n  const renderMusicSectionInputs = React.useCallback(() => {\n    return sections.length > 0 ? sections.map(section => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: 2,\n        children: [/*#__PURE__*/_jsxDEV(STextField, {\n          multiline: true,\n          variant: \"outlined\",\n          onChange: e => dispatch(editSectionValue({\n            id: section.id,\n            value: e.target.value\n          })),\n          value: section.value,\n          label: section.label\n        }, section.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FaMinusSquare, {\n          onClick: () => dispatch(deleteSection({\n            id: section.id\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }, this)]\n      }, section.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this)\n    }, void 0, false)) : null;\n  }, [sections]);\n  const renderMusicSectionChart = React.useCallback(() => {\n    return sections.map(section => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: section.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            wordSpacing: 12\n          },\n          variant: \"body2\",\n          children: section.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, section.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true));\n  }, [sections]);\n\n  const handleDownloadPDF = async () => {\n    const el = document.getElementById('pdf');\n    const w = el.offsetWidth;\n    const h = el.offsetHeight;\n    html2canvas(el, {\n      scale: 5\n    }).then(canvas => {\n      const img = canvas.toDataURL('image/jpeg', 1);\n      const doc = new JsPDF('l', 'px', [w, h]);\n      doc.addImage(img, 'JPEG', 0, 0, w, h);\n      doc.save(`${title || 'chart'}.pdf`);\n    });\n  };\n\n  const handleSaveChart = React.useCallback(() => {\n    dispatch(saveChartAsync({\n      sections,\n      title,\n      key,\n      bpm\n    }));\n  }, [dispatch, sections, title, key, bpm]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SLayout, {\n    header: /*#__PURE__*/_jsxDEV(SBox, {\n      marginLeft: \"auto\",\n      children: [isAuthenticated ? /*#__PURE__*/_jsxDEV(SignOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 54\n      }, this), (user === null || user === void 0 ? void 0 : user.name) && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Welcome, \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this),\n    menu: isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SDrawer, {\n        charts: entities,\n        handleSelectChart: id => dispatch(loadSavedChart(id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSaveChart,\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), \"Save Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true),\n    controls: /*#__PURE__*/_jsxDEV(SPaper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDownloadPDF,\n        children: \"Download Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SBox, {\n        m: 1,\n        children: [/*#__PURE__*/_jsxDEV(STextField, {\n          id: \"songTitle\",\n          name: \"songTitle\",\n          label: \"Song - Artist/Band\",\n          placeholder: \"Africa - Toto\",\n          value: title,\n          onChange: e => dispatch(editTitle(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: keys,\n          placeholder: \"C\",\n          value: key,\n          onChange: (e, value) => dispatch(editKey(value)),\n          getOptionLabel: option => option,\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(STextField, { ...params,\n            label: \"Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(STextField, {\n          type: \"number\",\n          id: \"bpm\",\n          name: \"bpm\",\n          label: \"BPM\",\n          placeholder: \"120bpm\",\n          value: bpm,\n          onChange: e => dispatch(editBpm(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(STextField, {\n          id: \"section\",\n          name: \"section\",\n          label: \"Add a section\",\n          placeholder: \"Verse\",\n          value: inputSection,\n          onChange: handleChange,\n          onKeyDown: handleNewSection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        children: renderMusicSectionInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this),\n    chart: /*#__PURE__*/_jsxDEV(SPaper, {\n      id: \"pdf\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"left\",\n        variant: \"h5\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"right\",\n        variant: \"body1\",\n        children: [\"Key: \", key]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"right\",\n        variant: \"body1\",\n        children: [\"Bpm: \", bpm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), renderMusicSectionChart()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"kzIyfYo0pmySXRND1B4J89Wfbks=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAuth0];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/weslleybraga/Documents/GitHub/chart-me/client/src/App.tsx"],"names":["Box","Divider","Typography","Button","React","SPaper","STextField","SLayout","SBox","SignOut","SignIn","Autocomplete","useAppDispatch","useAppSelector","createSection","editSectionValue","deleteSection","editTitle","editKey","editBpm","loadSavedChart","fetchChartsAsync","saveChartAsync","FaMinusSquare","FaPlus","JsPDF","html2canvas","keys","useAuth0","setProfile","SDrawer","App","sections","title","key","bpm","entities","isLoading","state","chart","dispatch","console","log","isAuthenticated","user","useEffect","id","sub","split","email","inputSection","setInputSection","useState","handleChange","e","newValue","target","value","toUpperCase","handleNewSection","trim","renderMusicSectionInputs","useCallback","length","map","section","label","renderMusicSectionChart","wordSpacing","handleDownloadPDF","el","document","getElementById","w","offsetWidth","h","offsetHeight","scale","then","canvas","img","toDataURL","doc","addImage","save","handleSaveChart","name","option","width","params"],"mappings":"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","sourcesContent":["import { Box, Divider, Typography, Button } from '@material-ui/core'\nimport React from 'react'\nimport {\n    SPaper,\n    STextField,\n    SLayout,\n    SBox,\n    SignOut,\n    SignIn\n} from './components'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { useAppDispatch, useAppSelector } from './redux/hooks'\nimport {\n    createSection,\n    editSectionValue,\n    deleteSection,\n    editTitle,\n    editKey,\n    editBpm,\n    loadSavedChart,\n    fetchChartsAsync,\n    saveChartAsync\n} from './redux/slices/chart.slice'\nimport { FaMinusSquare, FaPlus } from 'react-icons/fa'\nimport JsPDF from 'jspdf'\nimport html2canvas from 'html2canvas'\nimport keys from './keys'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { setProfile } from './redux/slices/user.slice'\nimport SDrawer from './components/SDrawer'\n\nconst App: React.FC = () => {\n    const { sections, title, key, bpm, entities, isLoading } = useAppSelector(\n        (state) => state.chart\n    )\n    const dispatch = useAppDispatch()\n    console.log(entities)\n    const { isAuthenticated, user } = useAuth0()\n\n    React.useEffect(() => {\n        if (isAuthenticated && user) {\n            const id = user.sub?.split('|')[1] || ''\n            dispatch(setProfile({ id, email: user.email || '' }))\n            dispatch(fetchChartsAsync())\n        }\n    }, [isAuthenticated])\n\n    const [inputSection, setInputSection] = React.useState('')\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value.toUpperCase()\n        setInputSection(newValue)\n    }\n\n    const handleNewSection = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'Enter') {\n            dispatch(createSection(inputSection.trim()))\n            setInputSection('')\n        }\n    }\n\n    const renderMusicSectionInputs = React.useCallback(() => {\n        return sections.length > 0\n            ? sections.map((section) => (\n                  <>\n                      <Box\n                          key={section.id}\n                          display=\"flex\"\n                          flexDirection=\"row\"\n                          marginTop={2}\n                      >\n                          <STextField\n                              multiline\n                              variant=\"outlined\"\n                              onChange={(e) =>\n                                  dispatch(\n                                      editSectionValue({\n                                          id: section.id,\n                                          value: e.target.value\n                                      })\n                                  )\n                              }\n                              value={section.value}\n                              label={section.label}\n                              key={section.id}\n                          />\n                          <FaMinusSquare\n                              onClick={() =>\n                                  dispatch(deleteSection({ id: section.id }))\n                              }\n                          />\n                      </Box>\n                  </>\n              ))\n            : null\n    }, [sections])\n\n    const renderMusicSectionChart = React.useCallback(() => {\n        return sections.map((section) => (\n            <>\n                <Box key={section.id}>\n                    <Typography variant=\"h6\">{section.label}</Typography>\n                    <Typography style={{ wordSpacing: 12 }} variant=\"body2\">\n                        {section.value}\n                    </Typography>\n                </Box>\n                <Divider />\n            </>\n        ))\n    }, [sections])\n\n    const handleDownloadPDF = async () => {\n        const el = document.getElementById('pdf') as HTMLElement\n        const w = el.offsetWidth\n        const h = el.offsetHeight\n\n        html2canvas(el, { scale: 5 }).then((canvas) => {\n            const img = canvas.toDataURL('image/jpeg', 1)\n            const doc = new JsPDF('l', 'px', [w, h])\n            doc.addImage(img, 'JPEG', 0, 0, w, h)\n            doc.save(`${title || 'chart'}.pdf`)\n        })\n    }\n\n    const handleSaveChart = React.useCallback(() => {\n        dispatch(saveChartAsync({ sections, title, key, bpm }))\n    }, [dispatch, sections, title, key, bpm])\n\n    if (isLoading) {\n        return <span>Loading...</span>\n    }\n\n    return (\n        <SLayout\n            header={\n                <SBox marginLeft=\"auto\">\n                    {isAuthenticated ? <SignOut /> : <SignIn />}\n                    {user?.name && (\n                        <Typography variant=\"h6\">\n                            Welcome, {user.name}\n                        </Typography>\n                    )}\n                </SBox>\n            }\n            menu={\n                isAuthenticated && (<><SDrawer\n                charts={entities}\n                handleSelectChart={(id) => dispatch(loadSavedChart(id))}\n                /><Button variant=\"contained\" onClick={handleSaveChart}>\n                <FaPlus />\n                Save Chart\n            </Button></>)\n            }\n            controls={\n                <SPaper>\n                    <Button onClick={handleDownloadPDF}>Download Chart</Button>\n                    <Typography variant=\"h4\">Controls</Typography>\n                    <SBox m={1}>\n                        <STextField\n                            id=\"songTitle\"\n                            name=\"songTitle\"\n                            label=\"Song - Artist/Band\"\n                            placeholder=\"Africa - Toto\"\n                            value={title}\n                            onChange={(e) =>\n                                dispatch(editTitle(e.target.value))\n                            }\n                        />\n                        <Autocomplete\n                            options={keys}\n                            placeholder=\"C\"\n                            value={key}\n                            onChange={(e, value) => dispatch(editKey(value))}\n                            getOptionLabel={(option) => option}\n                            style={{ width: 300 }}\n                            renderInput={(params) => (\n                                <STextField {...params} label=\"Key\" />\n                            )}\n                        />\n                        <STextField\n                            type=\"number\"\n                            id=\"bpm\"\n                            name=\"bpm\"\n                            label=\"BPM\"\n                            placeholder=\"120bpm\"\n                            value={bpm}\n                            onChange={(e) => dispatch(editBpm(e.target.value))}\n                        />\n                        <STextField\n                            id=\"section\"\n                            name=\"section\"\n                            label=\"Add a section\"\n                            placeholder=\"Verse\"\n                            value={inputSection}\n                            onChange={handleChange}\n                            onKeyDown={handleNewSection}\n                        />\n                    </SBox>\n                    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n                        {renderMusicSectionInputs()}\n                    </Box>\n                </SPaper>\n            }\n            chart={\n                <SPaper id=\"pdf\">\n                    <Typography align=\"left\" variant=\"h5\">\n                        {title}\n                    </Typography>\n                    <Typography align=\"right\" variant=\"body1\">\n                        Key: {key}\n                    </Typography>\n                    <Typography align=\"right\" variant=\"body1\">\n                        Bpm: {bpm}\n                    </Typography>\n                    {renderMusicSectionChart()}\n                </SPaper>\n            }\n        />\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}