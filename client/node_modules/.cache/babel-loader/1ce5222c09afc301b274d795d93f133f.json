{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport chartReducer from './slices/chart.slice';\nimport userReducer from './slices/user.slice';\nconst reducers = combineReducers({\n  chart: chartReducer,\n  user: userReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});","map":{"version":3,"sources":["/Users/weslleybraga/Documents/GitHub/chart-me/client/src/redux/store.ts"],"names":["configureStore","storage","combineReducers","persistReducer","chartReducer","userReducer","reducers","chart","user","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,QAAQ,GAAGJ,eAAe,CAAC;AAC7BK,EAAAA,KAAK,EAAEH,YADsB;AAE7BI,EAAAA,IAAI,EAAEH;AAFuB,CAAD,CAAhC;AAKA,MAAMI,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBT,EAAAA;AAFkB,CAAtB;AAKA,MAAMU,gBAAgB,GAAGR,cAAc,CAACM,aAAD,EAAgBH,QAAhB,CAAvC;AAEA,OAAO,MAAMM,KAAK,GAAGZ,cAAc,CAAC;AAChCa,EAAAA,OAAO,EAAEF,gBADuB;AAEhCG,EAAAA,UAAU,EAAGC,oBAAD,IACRA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AADF,GAAD;AAHQ,CAAD,CAA5B","sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage'\nimport { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport chartReducer from './slices/chart.slice'\nimport userReducer from './slices/user.slice'\n\nconst reducers = combineReducers({\n    chart: chartReducer,\n    user: userReducer\n})\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            serializableCheck: false\n        })\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n    ReturnType,\n    RootState,\n    unknown,\n    Action<string>\n>\n"]},"metadata":{},"sourceType":"module"}